package com.kh.OopEx;
/*
객체
	캡슐화	 : Getter/Setter 실제 상세를 숨기고 원본은 유지하되
	 		   				외부에서 접근할 때 원본을 복사해서 밖에서만 수정하고
	 		   				수정한 내용을 반환할 수 있도록
	상속		 : extends		부모클래스를 물려받아 자식클래스에 맞게끔 수정한 클래스
							클래스 상속은 1개만 가능
	다형성	 : @Override	상속과 연관이 깊음
			   				부모클래스에서 물려받은 자식클래스가 다시 정의를 내려 메서드나 필드를 사용
	추상화	 : abstract 희미하게 완성하지 않은 메서드를 완성할 수 있게 클래스에서 다시 작성해주는 것
=====	
	인터페이스	 : implement	객체가 아니기 때문에 객체에서 사용을 할 수 있고
							인터페이스 상속은 여러 개 가능
							<인터페이스 사용 방법>
								인터페이스에 void 메서드를 작성 (1줄)
								클래스에서 인터페이스를 상속받은 후 인터페이스에 있던 void 메서드를 재작성
								해당 클래스의 main 메서드에서 실행 / 새로운 클래스에서 실행

클래스 : 데이터와 해당 데이터를 처리하기 위한 행동(메서드)들의 집합
	자바에서 클래스는 객체를 만들기 위한 공간(틀)
	클래스 이름은 파일명과 일치해야 함
	<클래스 이름의 규칙>
		첫 글자를 대문자로 작성할 경우 외부에서 파일을 사용가능 하다는 표시
		첫 글자를 소문자로 작성할 경우 외부에서 파일을 사용할 수 없다는 표시
*/

public class 객체 {

}
