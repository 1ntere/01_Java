package pre.propertiesEx2;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.*;

public class PropTest {
	//fileSave	drama.xml
	public static void fileSave(Properties p) {
		p.setProperty("1", "순풍산부인과,1998,682");
		p.setProperty("2", "똑바로살아라,2002,239");
		p.setProperty("3", "눈물의여왕,2024,16");
		p.setProperty("4", "아내의유혹,2008,129");
		//Properties xml파일로 저장
			//xml : 텍스트 기반의 문서로 웹에서 읽기 편하도록 < > 규칙을 지정해서 작성하는 공간
		try {
			FileOutputStream fos = new FileOutputStream("drama.xml");
			p.storeToXML(fos, null);
			fos.close();
			System.out.println("데이터가 drama.xml 파일에 저장되었습니다.");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public static void fileOpen(Properties p) {
		try {
			FileInputStream fis = new FileInputStream("drama.xml");
			p.loadFromXML(fis);//글이 적혀있는 xml 파일 불러오기
			fis.close();
			
			//Properties 객체에 키-값을 넣어서 List 저장
			List<Drama> 드라마들 = new ArrayList<>();
				//데이터가 어떻게 들어있는지 데이터를 담을 리스트를 만들어준 것
				//for문으로 설정 파일 안에 저겨있는 이름을 기준으로 모두 추가하기
			for(String key : p.stringPropertyNames()) {
				//xml 파일 안에 들어있는 모든 값을 문자열 형태로 변경해서 검색할 수 있도록 함
				//모든 키를 담을 String[]을 생성해서 key들을 모두 담아줌
				//, 를 기준으로
				
				String[] values = p.getProperty(values[0],Integer.parseInt(values[1]),Integer.parseInt(values[2])).split(",");
					//오류발생 : The method getProperty(String, String) in the type Properties is not applicable for the arguments (String, int, int)
					//
			}
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public static void main(String[] args) {
		Properties p = new Properties();
		fileSave(p);
	}
}
